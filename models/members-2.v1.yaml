openapi: 3.0.0
info:
  title: members
  version: '1.0'
  contact:
    email: joke@nakhon.net
  description: Manage members
  license:
    name: MIT
servers:
  - url: 'http://localhost:3000'
paths:
  /members:
    get:
      summary: List members
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/member'
      operationId: get-members
      description: List members
      tags:
        - member
    post:
      summary: Create new member
      operationId: post-members
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: integer
      description: Create new member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/member'
      tags:
        - member
    parameters: []
  '/members/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get member info
      tags:
        - member
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/member'
      operationId: get-members-id
      description: Get member info
    put:
      summary: Update member info
      operationId: put-members-id
      responses:
        '200':
          description: OK
      description: Update member info
      tags:
        - member
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/member'
  '/members/{id}/warehouses':
    get:
      summary: List warehouses
      tags:
        - member
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/warehouse'
      operationId: get-warehouses
      description: "List member's warehouses"
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: Create new warehouse
      operationId: post-members-id-warehouses
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: integer
      description: "Create new member's warehouse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/warehouse'
      tags:
        - member
  '/members/{id}/warehouses/{warehouse-id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: ''
      - schema:
          type: integer
        name: warehouse-id
        in: path
        required: true
    get:
      summary: "Get member's warehouse info"
      tags:
        - member
      operationId: get-members-id-warehouses-id
      description: "Get member's warehouse info"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
    put:
      summary: "Update member's warehouse info"
      operationId: put-members-id-warehouses-id
      responses:
        '200':
          description: OK
      description: "Update member's warehouse info"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/warehouse'
      tags:
        - member
  /products:
    get:
      summary: List products
      tags:
        - product
      operationId: get-products
      description: List products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/product'
    post:
      summary: Create new product
      operationId: post-products
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: integer
      tags:
        - product
      description: Create new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
  '/products/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get product info
      tags:
        - product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
      operationId: get-products-id
      description: Get product info
    put:
      summary: Update product info
      operationId: put-products-id
      responses:
        '200':
          description: OK
      description: Update product info
      tags:
        - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
  '/members/{id}/receivings':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: "List member's receivings"
      tags:
        - member
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        receivingDate:
                          type: string
                          format: date-time
                        warehouse:
                          $ref: '#/components/schemas/warehouse'
                        products:
                          type: array
                          items:
                            type: object
                            properties:
                              product:
                                $ref: '#/components/schemas/product'
                              quantity:
                                type: integer
      operationId: get-members-id-receivings
      description: "List member's receivings"
    post:
      summary: Receive products
      operationId: post-members-id-receivings
      responses:
        '201':
          description: Created
      description: Receive products to warehouse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                receiveDate:
                  type: string
                  format: date-time
                warehouseCode:
                  type: string
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productCode:
                        type: string
                      quantity:
                        type: integer
      tags:
        - member
components:
  schemas:
    member:
      title: member
      type: object
      description: Member info
      properties:
        id:
          type: integer
        code:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        citizenNo:
          type: string
          minLength: 13
          maxLength: 13
          pattern: '^[0-9]{13}$'
        address:
          type: string
        telephone:
          type: string
          pattern: '^[0-9]+$'
    warehouse:
      title: warehouse
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
      description: Warehouse info
    product:
      title: product
      type: object
      description: Product info
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        baseUnitCode:
          type: string
        baseUnitName:
          type: string
        price:
          type: number
tags:
  - name: member
  - name: product
